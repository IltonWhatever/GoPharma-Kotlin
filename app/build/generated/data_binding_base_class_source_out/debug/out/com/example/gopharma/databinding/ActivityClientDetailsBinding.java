// Generated by view binder compiler. Do not edit!
package com.example.gopharma.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gopharma.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityClientDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText celular;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final EditText detailnome;

  @NonNull
  public final Button editButton;

  @NonNull
  public final EditText email;

  private ActivityClientDetailsBinding(@NonNull LinearLayout rootView, @NonNull EditText celular,
      @NonNull Button deleteButton, @NonNull EditText detailnome, @NonNull Button editButton,
      @NonNull EditText email) {
    this.rootView = rootView;
    this.celular = celular;
    this.deleteButton = deleteButton;
    this.detailnome = detailnome;
    this.editButton = editButton;
    this.email = email;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityClientDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityClientDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_client_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityClientDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.celular;
      EditText celular = ViewBindings.findChildViewById(rootView, id);
      if (celular == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.detailnome;
      EditText detailnome = ViewBindings.findChildViewById(rootView, id);
      if (detailnome == null) {
        break missingId;
      }

      id = R.id.editButton;
      Button editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      return new ActivityClientDetailsBinding((LinearLayout) rootView, celular, deleteButton,
          detailnome, editButton, email);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
